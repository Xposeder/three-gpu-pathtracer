{"mappings":"knBAMaA,UAAiCC,EAAAC,eAEzCC,gBAEH,OAAOC,KAAKC,SAASF,UAAUG,MAI5BH,cAAWI,GAEdH,KAAKC,SAASF,UAAUG,MAAQC,EAChCH,KAAKI,UAAW,gBAAiBD,EAAI,KAAO,IAIzCE,oBAEH,OAAOR,EAAAS,sBAIJD,kBAAeF,GAElB,GAAKA,IAAMN,EAAAS,sBAEV,MAAM,IAAIC,MAAO,qFAMNC,GAEZC,MAAO,CAENC,QAAS,CACRC,QAAS,IAGVV,SAAU,CACTW,IAAK,CAAEV,MAAO,IAAIW,EAAAC,sBAClBC,OAAQ,CAAEb,MAAO,GACjBc,KAAM,CAAEd,MAAO,GAEfH,UAAW,CAAEG,MAAO,MACpBe,YAAa,CAAEf,MAAO,IAAIL,EAAAqB,QAAS,EAAG,KAGvCC,aAAwB,2yBAiCxBC,eAA0B,+XAWVP,EAAAQ,kCACAR,EAAAS,oCACZC,EAAAC,kCACAD,EAAAE,28FA2FL,IAAM,MAAMC,KAAO1B,KAAKC,SAEdyB,KAAO1B,MAEf2B,OAAOC,eAAgB5B,KAAM0B,EAAK,CAEjCG,MAEC,OAAO7B,KAAKC,SAAUyB,GAAMxB,OAI7B4B,IAAK3B,GAEJH,KAAKC,SAAUyB,GAAMxB,MAAQC,KAUjCH,KAAK+B,UAAWvB,GAIjBJ,UAAW4B,EAAM9B,GAEXA,MAAAA,EAEC8B,KAAQhC,KAAKU,iBAEVV,KAAKU,QAASsB,GACrBhC,KAAKiC,aAAc,GAMfjC,KAAKU,QAASsB,KAAW9B,IAE7BF,KAAKU,QAASsB,GAAS9B,EACvBF,KAAKiC,aAAc,IC5OvB,IAAIC,EAAQ,WAEX,IAAIC,EAAO,EAEPC,EAAYC,SAASC,cAAe,gBAW/BC,EAAUC,GAGlB,OADAJ,EAAUK,YAAaD,EAAME,KACtBF,WAICG,EAAWC,GAEnB,IAAM,IAAIC,EAAI,EAAGA,EAAIT,EAAUU,SAASC,OAAQF,IAE/CT,EAAUU,SAAUD,GAAIG,MAAMC,QAAUJ,IAAMD,EAAK,QAAU,OAI9DT,EAAOS,EAzBRR,EAAUY,MAAME,QAAU,uEAC1Bd,EAAUe,iBAAkB,SAAS,SAAWC,GAE/CA,EAAMC,iBACNV,IAAcR,EAAOC,EAAUU,SAASC,WAEtC,GAyBH,IAAIO,GAAcC,aAAeC,MAAOC,MAAOC,EAAWJ,EAAWK,EAAS,EAE1EC,EAAWrB,EAAU,IAAIL,EAAM2B,MAAO,MAAO,OAAQ,SACrDC,EAAUvB,EAAU,IAAIL,EAAM2B,MAAO,KAAM,OAAQ,SAEvD,GAAKE,KAAKR,aAAeQ,KAAKR,YAAYS,OAEzC,IAAIC,EAAW1B,EAAU,IAAIL,EAAM2B,MAAO,KAAM,OAAQ,SAMzD,OAFAlB,EAAW,GAEJ,CAENuB,SAAU,GAEVxB,IAAKN,EAELG,SAAUA,EACVI,UAAWA,EAEXwB,MAAO,WAENb,GAAcC,aAAeC,MAAOC,OAIrCW,IAAK,WAEJT,IAEA,IAAIU,GAASd,aAAeC,MAAOC,MAInC,GAFAK,EAAQQ,OAAQD,EAAOf,EAAW,KAE7Be,GAAQX,EAAW,MAEvBE,EAASU,OAAmB,IAATX,GAAoBU,EAAOX,GAAY,KAE1DA,EAAWW,EACXV,EAAS,EAEJM,GAAW,CAEf,IAAID,EAAST,YAAYS,OACzBC,EAASK,OAAQN,EAAOO,eAAiB,QAASP,EAAOQ,gBAAkB,SAM7E,OAAOH,GAIRC,OAAQ,WAEPhB,EAAYtD,KAAKoE,OAMlBK,WAAYrC,EACZsC,QAAS/B,IAMXT,EAAM2B,MAAQ,SAAW7B,EAAM2C,EAAIC,GAElC,IAAIC,EAAMC,EAAAA,EAAUC,EAAM,EAAGC,EAAQC,KAAKD,MACtCE,EAAKF,EAAOG,OAAOC,kBAAoB,GAEvCC,EAAQ,GAAKH,EAAII,EAAS,GAAKJ,EAClCK,EAAS,EAAIL,EAAIM,EAAS,EAAIN,EAC9BO,EAAU,EAAIP,EAAIQ,EAAU,GAAKR,EACjCS,EAAc,GAAKT,EAAIU,EAAe,GAAKV,EAExCW,EAASxD,SAASC,cAAe,UACrCuD,EAAOC,MAAQT,EACfQ,EAAOE,OAAST,EAChBO,EAAO7C,MAAME,QAAU,yBAEvB,IAAI8C,EAAUH,EAAOI,WAAY,MAejC,OAdAD,EAAQE,KAAO,QAAY,EAAIhB,EAAO,gCACtCc,EAAQG,aAAe,MAEvBH,EAAQI,UAAYxB,EACpBoB,EAAQK,SAAU,EAAG,EAAGhB,EAAOC,GAE/BU,EAAQI,UAAYzB,EACpBqB,EAAQM,SAAUtE,EAAMuD,EAAQC,GAChCQ,EAAQK,SAAUZ,EAASC,EAASC,EAAaC,GAEjDI,EAAQI,UAAYxB,EACpBoB,EAAQO,YAAc,GACtBP,EAAQK,SAAUZ,EAASC,EAASC,EAAaC,GAE1C,CAENlD,IAAKmD,EAELvB,OAAQ,SAAWpE,EAAOsG,GAEzB3B,EAAMI,KAAKJ,IAAKA,EAAK3E,GACrB6E,EAAME,KAAKF,IAAKA,EAAK7E,GAErB8F,EAAQI,UAAYxB,EACpBoB,EAAQO,YAAc,EACtBP,EAAQK,SAAU,EAAG,EAAGhB,EAAOK,GAC/BM,EAAQI,UAAYzB,EACpBqB,EAAQM,SAAUtB,EAAO9E,GAAU,IAAM8B,EAAO,KAAOgD,EAAOH,GAAQ,IAAMG,EAAOD,GAAQ,IAAKQ,EAAQC,GAExGQ,EAAQS,UAAWZ,EAAQJ,EAAUP,EAAIQ,EAASC,EAAcT,EAAIU,EAAcH,EAASC,EAASC,EAAcT,EAAIU,GAEtHI,EAAQK,SAAUZ,EAAUE,EAAcT,EAAIQ,EAASR,EAAIU,GAE3DI,EAAQI,UAAYxB,EACpBoB,EAAQO,YAAc,GACtBP,EAAQK,SAAUZ,EAAUE,EAAcT,EAAIQ,EAASR,EAAIF,GAAS,EAAM9E,EAAQsG,GAAeZ,WAQpGc,EAAexE,eC3Jf,IAAIyE,EAAUC,EAAUC,EAAQC,EAAOC,EACnCC,EAAQC,EAASC,EAASC,EAC1BC,EAAWC,EAASC,EACxB,MAAMC,EAAS,CAEdC,gBAAiB,EAAIrC,OAAOC,iBAC5BrE,OAAQ,EACR0G,gBAAiB,EACjBC,YAAY,EACZC,OAAO,YAqICC,IAER,MAAMC,EAAI1C,OAAO2C,WACXC,EAAI5C,OAAO6C,YACXC,EAAM9C,OAAOC,iBAAmBmC,EAAOC,gBAE7CP,EAAQiB,QAASL,EAAII,EAAKF,EAAIE,GAC9Bf,EAAQgB,QAASL,EAAII,EAAKF,EAAIE,GAE9BtB,EAASuB,QAASL,EAAGE,GACrBpB,EAASwB,cAAehD,OAAOC,kBAC/ByB,EAAOuB,OAASP,EAAIE,EACpBlB,EAAOwB,yBACPC,aAIQA,IAERjB,EAAU,EACVC,EAAe,WAIPiB,IAqBR,GAnBAC,sBAAuBD,GAEvBxB,EAAMzC,SAGN6C,EAAUsB,SAASC,IAEXnB,EAAOI,OAEbe,EAAS1H,OAIV0H,EAAS3H,OAASwG,EAAOxG,OACzB2H,EAAStI,UAAW,UAAWmH,EAAOE,oBAKtB,IAAZJ,IAAmBE,EAAOI,MAAQ,CAKtC,GAHAN,IACAC,GAAgBC,EAAOE,gBAElBF,EAAOG,aAAgBH,EAAOI,MAAQ,CAE1C,MAAME,EAAIZ,EAAQnB,MACZiC,EAAId,EAAQlB,OAClBc,EAAO8B,cACNd,EAAGE,EACH9C,KAAK2D,SAAW,GAAK3D,KAAK2D,SAAW,GACrCf,EAAGE,GAKLpB,EAASkC,gBAAiB5B,GAC1BN,EAASmC,OAAQhC,EAAOD,GAExBF,EAASkC,gBAAiB3B,GAC1BP,EAASoC,WAAY,EACrB/B,EAAO0B,SAASM,IAAM/B,EAAQgC,QAC9BjC,EAAO0B,SAASQ,QAAU3B,EAAOG,WAAa,EAAIL,EAAU,EAC5DL,EAAO8B,OAAQnC,GACfA,EAASoC,WAAY,EAKtBpC,EAASkC,gBAAiB,MAC1B7B,EAAO0B,SAASM,IAAM9B,EAAQ+B,QAC9BjC,EAAO0B,SAASQ,QAAU,EAC1BlC,EAAO8B,OAAQnC,GAEfS,EAAU+B,UAAS,YAAgB7B,sBA5MnCX,EAAW,IAAI9G,EAAAuJ,cAAqB,CAAEC,WAAW,IACjD1C,EAAS2C,eAAiBzJ,EAAA0J,aAC1BlH,SAASmH,KAAK/G,YAAakE,EAASlC,YAEpCuC,EAAS,IAAIyC,EAAAC,eAAgB,IAAI7J,EAAA8J,kBAAyB,CAAEC,aAAa,KAEzE/C,EAAS,IAAIhH,EAAAgK,kBAAyB,GAAI1E,OAAO2C,WAAa3C,OAAO6C,YAAa,KAAO,KACzFnB,EAAOiD,SAAShI,KAAK,EAAK,EAAG,GAE7BgF,EAAQ,IAAIjH,EAAAkK,MAEZnD,EAAW,IAAIoD,EAAAC,cAAepD,EAAQF,EAASlC,YAC/CmC,EAASzD,iBAAkB,UAAQ,KAElCmF,OAIDlB,EAAY/E,SAAS6H,eAAgB,WAGrCjD,EAAU,IAAIpH,EAAAsK,kBAAyB,EAAG,EAAG,CAAEC,KAAMvK,EAAAwK,UAAiBC,SAAUzK,EAAA0K,iBAEhFrD,EAAU,IAAIrH,EAAAsK,kBAAyB,EAAG,EAAG,CAAEC,KAAMvK,EAAAwK,UAAiBC,SAAUzK,EAAA0K,iBAEhFpD,EAAY,GAEZ,MAAMqD,EAAY,IAAIC,EAAAC,0BAChBC,GAAc,IAAIC,EAAAC,YACtBC,kBAAmBC,EAAAC,gBACnBC,UAAW,sGACXC,MAAMC,IAEN,MAAMC,EAAQ,IAAIvL,EAAAwL,MAGZC,EAAM,IAAIzL,EAAA0L,KAChBD,EAAIE,cAAeL,EAAKM,OAExB,MAAMC,EAAS,IAAI7L,EAAA8L,OACnBL,EAAIM,kBAAmBF,GAEvBP,EAAKM,MAAMI,MAAMC,UAAW,IAAMJ,EAAO3K,QACzCoK,EAAKM,MAAMM,oBACXX,EAAMY,IAAKb,EAAKM,OAGhBH,EAAIE,cAAeL,EAAKM,OAExB,MAAMQ,EAAQ,IAAIpM,EAAAqM,KACjB,IAAIrM,EAAAsM,uBAA8B,EAAG,EAAG,IAAM,KAC9C,IAAItM,EAAAuM,qBAA4B,CAAEC,MAAO,WAM1C,OAJAJ,EAAMK,SAASC,cACfN,EAAMnC,SAAS0C,EAAIlB,EAAIzG,IAAI2H,EAAI,KAC/BpB,EAAMY,IAAKC,GAEJzB,EAAUiC,SAAUrB,MAG3BF,MAAMwB,IAEN,MAAO9L,IAACA,GAAQ8L,EAEVC,EAAa,IAAI9L,EAAAC,qBACvB6L,EAAWC,WAAYhM,GAGvB,MAAMiM,EAAc,IAAIC,IAClB1B,EAAQsB,EAAOjB,MACrBL,EAAM2B,UAAUC,IAGf,GAAKA,EAAEC,OAAS,CAEf,MAAMlN,EAAYiN,EAAEtE,SAAS3I,UAC7B,IAAO8M,EAAYK,IAAKnN,GAAc,CAErC,MAAM2I,EAAW,IAAI9I,EAA0B,CAE9CgB,IAAK+L,EACL1L,YAAa+L,EAAEtE,SAASzH,sBACxBlB,EACAM,cAAe2M,EAAEtE,SAASrI,gBAG3BwM,EAAY/K,IAAK/B,EAAW2I,GAC5BvB,EAAUgG,KAAMzE,GAIjBsE,EAAEtE,SAAWmE,EAAYhL,IAAK9B,OAKhC+G,EAAMkF,IAAKZ,GAEXZ,EAAU4C,mBAINzC,EAENtI,SAAS6H,eAAgB,WAAYmD,SAErCzF,IACAzC,OAAOhC,iBAAkB,SAAUyE,GAEnC,MAAM0F,EAAM,IAAIC,EAAAC,IAChBF,EAAItB,IAAKzE,EAAQ,kBAAmB,GAAK,GAAIkG,SAAU7F,GACvD0F,EAAItB,IAAKzE,EAAQ,kBAAmB,EAAG,GAAI,GAC3C+F,EAAItB,IAAKzE,EAAQ,SAAU,EAAG,GAAIkG,SAAUnF,GAC5CgF,EAAItB,IAAKzE,EAAQ,cAAekG,SAAUnF,GAC1CgF,EAAItB,IAAKzE,EAAQ,SAEjBR,EAAQ,IAAIL,EACZrE,SAASmH,KAAK/G,YAAasE,EAAMtC,YAEjC6D,IACAC,IA7HDmF","sources":["src/materials/AmbientOcclusionMaterial.js","node_modules/three/examples/jsm/libs/stats.module.js","example/aoRender.js"],"sourcesContent":["import { ShaderMaterial, TangentSpaceNormalMap, Vector2 } from 'three';\nimport {\n\tMeshBVHUniformStruct, shaderStructs, shaderIntersectFunction,\n} from 'three-mesh-bvh';\nimport { shaderMaterialStructs, pathTracingHelpers } from '../shader/shaderStructs.js';\n\nexport class AmbientOcclusionMaterial extends ShaderMaterial {\n\n\tget normalMap() {\n\n\t\treturn this.uniforms.normalMap.value;\n\n\t}\n\n\tset normalMap( v ) {\n\n\t\tthis.uniforms.normalMap.value = v;\n\t\tthis.setDefine( 'USE_NORMALMAP', v ? null : '' );\n\n\t}\n\n\tget normalMapType() {\n\n\t\treturn TangentSpaceNormalMap;\n\n\t}\n\n\tset normalMapType( v ) {\n\n\t\tif ( v !== TangentSpaceNormalMap ) {\n\n\t\t\tthrow new Error( 'AmbientOcclusionMaterial: Only tangent space normal map are supported' );\n\n\t\t}\n\n\t}\n\n\tconstructor( parameters ) {\n\n\t\tsuper( {\n\n\t\t\tdefines: {\n\t\t\t\tSAMPLES: 10,\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\tbvh: { value: new MeshBVHUniformStruct() },\n\t\t\t\tradius: { value: 1.0 },\n\t\t\t\tseed: { value: 0 },\n\n\t\t\t\tnormalMap: { value: null },\n\t\t\t\tnormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vNorm;\n\t\t\t\tvarying vec3 vPos;\n\n\t\t\t\t#if defined(USE_NORMALMAP) && defined(USE_TANGENT)\n\n\t\t\t\t\tvarying vec2 vUv;\n\t\t\t\t\tvarying vec4 vTan;\n\n\t\t\t\t#endif\n\n                void main() {\n\n                    vec4 mvPosition = vec4( position, 1.0 );\n                    mvPosition = modelViewMatrix * mvPosition;\n                    gl_Position = projectionMatrix * mvPosition;\n\n\t\t\t\t\tmat3 modelNormalMatrix = transpose( inverse( mat3( modelMatrix ) ) );\n\t\t\t\t\tvNorm = normalize( modelNormalMatrix * normal );\n\t\t\t\t\tvPos = ( modelMatrix * vec4( position, 1.0 ) ).xyz;\n\n\t\t\t\t\t#if defined(USE_NORMALMAP) && defined(USE_TANGENT)\n\n\t\t\t\t\t\tvUv = uv;\n\t\t\t\t\t\tvTan = tangent;\n\n\t\t\t\t\t#endif\n\n                }\n\n            `,\n\n\t\t\tfragmentShader: /* glsl */`\n                #define RAY_OFFSET 1e-5\n\t\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\n                precision highp isampler2D;\n                precision highp usampler2D;\n                precision highp sampler2DArray;\n\t\t\t\tvec4 envMapTexelToLinear( vec4 a ) { return a; }\n                #include <common>\n\t\t\t\t#include <cube_uv_reflection_fragment>\n\n                ${ shaderStructs }\n                ${ shaderIntersectFunction }\n\t\t\t\t${ shaderMaterialStructs }\n\t\t\t\t${ pathTracingHelpers }\n\n                uniform BVH bvh;\n                uniform int seed;\n\t\t\t\tuniform float radius;\n\n\t\t\t\tvarying vec3 vNorm;\n\t\t\t\tvarying vec3 vPos;\n\n\t\t\t\t#if defined(USE_NORMALMAP) && defined(USE_TANGENT)\n\n\t\t\t\t\tuniform sampler2D normalMap;\n\t\t\t\t\tuniform vec2 normalScale;\n\t\t\t\t\tvarying vec2 vUv;\n\t\t\t\t\tvarying vec4 vTan;\n\n\t\t\t\t#endif\n\n                void main() {\n\n\t\t\t\t\trng_initialize( gl_FragCoord.xy, seed );\n\n\t\t\t\t\t// compute the flat face surface normal\n\t\t\t\t\tvec3 fdx = vec3( dFdx( vPos.x ), dFdx( vPos.y ), dFdx( vPos.z ) );\n\t\t\t\t\tvec3 fdy = vec3( dFdy( vPos.x ), dFdy( vPos.y ), dFdy( vPos.z ) );\n\t\t\t\t\tvec3 faceNormal = normalize( cross( fdx, fdy ) );\n\n\t\t\t\t\t// find the max component to scale the offset to account for floating point error\n\t\t\t\t\tvec3 absPoint = abs( vPos );\n\t\t\t\t\tfloat maxPoint = max( absPoint.x, max( absPoint.y, absPoint.z ) );\n\t\t\t\t\tvec3 normal = vNorm;\n\n\t\t\t\t\t#if defined(USE_NORMALMAP) && defined(USE_TANGENT)\n\n\t\t\t\t\t\t// some provided tangents can be malformed (0, 0, 0) causing the normal to be degenerate\n\t\t\t\t\t\t// resulting in NaNs and slow path tracing.\n\t\t\t\t\t\tif ( length( vTan.xyz ) > 0.0 ) {\n\n\t\t\t\t\t\t\tvec2 uv = vUv;\n\t\t\t\t\t\t\tvec3 tangent = normalize( vTan.xyz );\n\t\t\t\t\t\t\tvec3 bitangent = normalize( cross( normal, tangent ) * vTan.w );\n\t\t\t\t\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\n\t\t\t\t\t\t\tvec3 texNormal = texture2D( normalMap, uv ).xyz * 2.0 - 1.0;\n\t\t\t\t\t\t\ttexNormal.xy *= normalScale;\n\t\t\t\t\t\t\tnormal = vTBN * texNormal;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\tvec3 rayOrigin = vPos + faceNormal * ( maxPoint + 1.0 ) * RAY_OFFSET;\n\t\t\t\t\tfloat accumulated = 0.0;\n\t\t\t\t\tfor ( int i = 0; i < SAMPLES; i ++ ) {\n\n\t\t\t\t\t\t// sample the cosine weighted hemisphere and discard the sample if it's below\n\t\t\t\t\t\t// the geometric surface\n\t\t\t\t\t\tvec3 rayDirection = getHemisphereSample( normalize( normal ), rand4().xy );\n\n\t\t\t\t\t\t// check if we hit the mesh and its within the specified radius\n\t\t\t\t\t\tfloat side = 1.0;\n\t\t\t\t\t\tfloat dist = 0.0;\n\t\t\t\t\t\tvec3 barycoord = vec3( 0.0 );\n\t\t\t\t\t\tvec3 outNormal = vec3( 0.0 );\n\t\t\t\t\t\tuvec4 faceIndices = uvec4( 0u );\n\n\t\t\t\t\t\t// if the ray is above the geometry surface, and it doesn't hit another surface within the specified radius then\n\t\t\t\t\t\t// we consider it lit\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tdot( rayDirection, faceNormal ) > 0.0 &&\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t! bvhIntersectFirstHit( bvh, rayOrigin, rayDirection, faceIndices, outNormal, barycoord, side, dist ) ||\n\t\t\t\t\t\t\t\tdist > radius\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\n\t\t\t\t\t\t\taccumulated += 1.0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl_FragColor.rgb = vec3( accumulated / float( SAMPLES ) );\n\t\t\t\t\tgl_FragColor.a = 1.0;\n\n                }\n\n            `\n\n\t\t} );\n\n\t\tfor ( const key in this.uniforms ) {\n\n\t\t\tif ( ! ( key in this ) ) {\n\n\t\t\t\tObject.defineProperty( this, key, {\n\n\t\t\t\t\tget() {\n\n\t\t\t\t\t\treturn this.uniforms[ key ].value;\n\n\t\t\t\t\t},\n\n\t\t\t\t\tset( v ) {\n\n\t\t\t\t\t\tthis.uniforms[ key ].value = v;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tsetDefine( name, value = undefined ) {\n\n\t\tif ( value === undefined || value === null ) {\n\n\t\t\tif ( name in this.defines ) {\n\n\t\t\t\tdelete this.defines[ name ];\n\t\t\t\tthis.needsUpdate = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( this.defines[ name ] !== value ) {\n\n\t\t\t\tthis.defines[ name ] = value;\n\t\t\t\tthis.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","var Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time >= prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\nexport default Stats;\n","import * as THREE from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { PathTracingSceneGenerator } from '../src/index.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport { AmbientOcclusionMaterial } from '../src/materials/AmbientOcclusionMaterial.js';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\nimport { MeshBVHUniformStruct } from 'three-mesh-bvh';\n\nlet renderer, controls, camera, scene, stats;\nlet fsQuad, target1, target2, materials;\nlet samplesEl, samples, totalSamples;\nconst params = {\n\n\tresolutionScale: 1 / window.devicePixelRatio,\n\tradius: 2.0,\n\tsamplesPerFrame: 2.0,\n\taccumulate: true,\n\tpause: false,\n\n};\n\ninit();\n\nasync function init() {\n\n\t// initialize renderer\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\tdocument.body.appendChild( renderer.domElement );\n\n\tfsQuad = new FullScreenQuad( new THREE.MeshBasicMaterial( { transparent: true } ) );\n\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.025, 500 );\n\tcamera.position.set( - 4, 2, 3 );\n\n\tscene = new THREE.Scene();\n\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\tcontrols.addEventListener( 'change', () => {\n\n\t\treset();\n\n\t} );\n\n\tsamplesEl = document.getElementById( 'samples' );\n\n\t// initialize render targs\n\ttarget1 = new THREE.WebGLRenderTarget( 1, 1, { type: THREE.FloatType, encoding: THREE.LinearEncoding } );\n\n\ttarget2 = new THREE.WebGLRenderTarget( 1, 1, { type: THREE.FloatType, encoding: THREE.LinearEncoding } );\n\n\tmaterials = [];\n\n\tconst generator = new PathTracingSceneGenerator();\n\tconst gltfPromise = new GLTFLoader()\n\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t.loadAsync( 'https://raw.githubusercontent.com/gkjohnson/gltf-demo-models/main/material-balls/material-ball.glb' )\n\t\t.then( gltf => {\n\n\t\t\tconst group = new THREE.Group();\n\n\t\t\t// scale the scene to a reasonable size\n\t\t\tconst box = new THREE.Box3();\n\t\t\tbox.setFromObject( gltf.scene );\n\n\t\t\tconst sphere = new THREE.Sphere();\n\t\t\tbox.getBoundingSphere( sphere );\n\n\t\t\tgltf.scene.scale.setScalar( 2.5 / sphere.radius );\n\t\t\tgltf.scene.updateMatrixWorld();\n\t\t\tgroup.add( gltf.scene );\n\n\t\t\t// position the floor\n\t\t\tbox.setFromObject( gltf.scene );\n\n\t\t\tconst floor = new THREE.Mesh(\n\t\t\t\tnew THREE.CylinderBufferGeometry( 3, 3, 0.05, 200 ),\n\t\t\t\tnew THREE.MeshStandardMaterial( { color: 0x1a1a1a } ),\n\t\t\t);\n\t\t\tfloor.geometry.clearGroups();\n\t\t\tfloor.position.y = box.min.y - 0.025;\n\t\t\tgroup.add( floor );\n\n\t\t\treturn generator.generate( group );\n\n\t\t} )\n\t\t.then( result => {\n\n\t\t\tconst { bvh } = result;\n\n\t\t\tconst bvhUniform = new MeshBVHUniformStruct();\n\t\t\tbvhUniform.updateFrom( bvh );\n\n\t\t\t// TODO: for some reason creating multiple materials _really_ slows down the rendering?\n\t\t\tconst materialMap = new Map();\n\t\t\tconst group = result.scene;\n\t\t\tgroup.traverse( c => {\n\n\t\t\t\t// reuse materials as much as possible since different ones cause slow down\n\t\t\t\tif ( c.isMesh ) {\n\n\t\t\t\t\tconst normalMap = c.material.normalMap;\n\t\t\t\t\tif ( ! materialMap.has( normalMap ) ) {\n\n\t\t\t\t\t\tconst material = new AmbientOcclusionMaterial( {\n\n\t\t\t\t\t\t\tbvh: bvhUniform,\n\t\t\t\t\t\t\tnormalScale: c.material.normalScale,\n\t\t\t\t\t\t\tnormalMap,\n\t\t\t\t\t\t\tnormalMapType: c.material.normalMapType,\n\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tmaterialMap.set( normalMap, material );\n\t\t\t\t\t\tmaterials.push( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tc.material = materialMap.get( normalMap );\n\n\t\t\t\t}\n\n\t\t\t} );\n\t\t\tscene.add( group );\n\n\t\t\tgenerator.dispose();\n\n\t\t} );\n\n\tawait gltfPromise;\n\n\tdocument.getElementById( 'loading' ).remove();\n\n\tonResize();\n\twindow.addEventListener( 'resize', onResize );\n\n\tconst gui = new GUI();\n\tgui.add( params, 'resolutionScale', 0.1, 1 ).onChange( onResize );\n\tgui.add( params, 'samplesPerFrame', 1, 10, 1 );\n\tgui.add( params, 'radius', 0, 4 ).onChange( reset );\n\tgui.add( params, 'accumulate' ).onChange( reset );\n\tgui.add( params, 'pause' );\n\n\tstats = new Stats();\n\tdocument.body.appendChild( stats.domElement );\n\n\treset();\n\tanimate();\n\n}\n\nfunction onResize() {\n\n\tconst w = window.innerWidth;\n\tconst h = window.innerHeight;\n\tconst dpr = window.devicePixelRatio * params.resolutionScale;\n\n\ttarget1.setSize( w * dpr, h * dpr );\n\ttarget2.setSize( w * dpr, h * dpr );\n\n\trenderer.setSize( w, h );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\tcamera.aspect = w / h;\n\tcamera.updateProjectionMatrix();\n\treset();\n\n}\n\nfunction reset() {\n\n\tsamples = 0;\n\ttotalSamples = 0;\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tstats.update();\n\n\t// update all the material parameters\n\tmaterials.forEach( material => {\n\n\t\tif ( ! params.pause ) {\n\n\t\t\tmaterial.seed ++;\n\n\t\t}\n\n\t\tmaterial.radius = params.radius;\n\t\tmaterial.setDefine( 'SAMPLES', params.samplesPerFrame );\n\n\t} );\n\n\t// update the render targets if it's a first frame or not paused\n\tif ( samples === 0 || ! params.pause ) {\n\n\t\tsamples ++;\n\t\ttotalSamples += params.samplesPerFrame;\n\n\t\tif ( params.accumulate && ! params.pause ) {\n\n\t\t\tconst w = target1.width;\n\t\t\tconst h = target1.height;\n\t\t\tcamera.setViewOffset(\n\t\t\t\tw, h,\n\t\t\t\tMath.random() - 0.5, Math.random() - 0.5,\n\t\t\t\tw, h,\n\t\t\t);\n\n\t\t}\n\n\t\trenderer.setRenderTarget( target1 );\n\t\trenderer.render( scene, camera );\n\n\t\trenderer.setRenderTarget( target2 );\n\t\trenderer.autoClear = false;\n\t\tfsQuad.material.map = target1.texture;\n\t\tfsQuad.material.opacity = params.accumulate ? 1 / samples : 1;\n\t\tfsQuad.render( renderer );\n\t\trenderer.autoClear = true;\n\n\t}\n\n\t// render to screen\n\trenderer.setRenderTarget( null );\n\tfsQuad.material.map = target2.texture;\n\tfsQuad.material.opacity = 1;\n\tfsQuad.render( renderer );\n\n\tsamplesEl.innerText = `Samples: ${ totalSamples }`;\n\n}\n\n\n\n\n"],"names":["$7791968eef97e948$export$9f19d0b0c805745","$hGT0Q","ShaderMaterial","normalMap","this","uniforms","value","v","setDefine","normalMapType","TangentSpaceNormalMap","Error","parameters","super","defines","SAMPLES","bvh","$mNwkg","MeshBVHUniformStruct","radius","seed","normalScale","Vector2","vertexShader","fragmentShader","shaderStructs","shaderIntersectFunction","$6TM0u","shaderMaterialStructs","pathTracingHelpers","key","Object","defineProperty","get","set","setValues","name","needsUpdate","$02840fc4832269db$var$Stats","mode","container","document","createElement","addPanel","panel","appendChild","dom","showPanel","id","i","children","length","style","display","cssText","addEventListener","event","preventDefault","beginTime","performance","Date","now","prevTime","frames","fpsPanel","Panel","msPanel","self","memory","memPanel","REVISION","begin","end","time","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","fg","bg","min","Infinity","max","round","Math","PR","window","devicePixelRatio","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","canvas","width","height","context","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","maxValue","drawImage","$02840fc4832269db$export$2e2bcd8739ae039","$83a0cf2bcbb420b6$var$renderer","$83a0cf2bcbb420b6$var$controls","$83a0cf2bcbb420b6$var$camera","$83a0cf2bcbb420b6$var$scene","$83a0cf2bcbb420b6$var$stats","$83a0cf2bcbb420b6$var$fsQuad","$83a0cf2bcbb420b6$var$target1","$83a0cf2bcbb420b6$var$target2","$83a0cf2bcbb420b6$var$materials","$83a0cf2bcbb420b6$var$samplesEl","$83a0cf2bcbb420b6$var$samples","$83a0cf2bcbb420b6$var$totalSamples","$83a0cf2bcbb420b6$var$params","resolutionScale","samplesPerFrame","accumulate","pause","$83a0cf2bcbb420b6$var$onResize","w","innerWidth","h","innerHeight","dpr","setSize","setPixelRatio","aspect","updateProjectionMatrix","$83a0cf2bcbb420b6$var$reset","$83a0cf2bcbb420b6$var$animate","requestAnimationFrame","forEach","material","setViewOffset","random","setRenderTarget","render","autoClear","map","texture","opacity","innerText","WebGLRenderer","antialias","outputEncoding","sRGBEncoding","body","$hwk6U","FullScreenQuad","MeshBasicMaterial","transparent","PerspectiveCamera","position","Scene","$W2bOH","OrbitControls","getElementById","WebGLRenderTarget","type","FloatType","encoding","LinearEncoding","generator","$aBPXg","PathTracingSceneGenerator","gltfPromise","$4EHgc","GLTFLoader","setMeshoptDecoder","$c0AwW","MeshoptDecoder","loadAsync","then","gltf","group","Group","box","Box3","setFromObject","scene","sphere","Sphere","getBoundingSphere","scale","setScalar","updateMatrixWorld","add","floor","Mesh","CylinderBufferGeometry","MeshStandardMaterial","color","geometry","clearGroups","y","generate","result","bvhUniform","updateFrom","materialMap","Map","traverse","c","isMesh","has","push","dispose","remove","gui","$ghLil","GUI","onChange","$83a0cf2bcbb420b6$var$init"],"version":3,"file":"aoRender.a38dd39d.js.map"}